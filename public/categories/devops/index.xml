<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Rakesh Core</title>
    <link>//localhost:1313/categories/devops/</link>
    <description>Recent content in Devops on Rakesh Core</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="//localhost:1313/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWX</title>
      <link>//localhost:1313/docs/configuration-management/ansible/awx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/configuration-management/ansible/awx/</guid>
      <description></description>
    </item>
    <item>
      <title>Containerd</title>
      <link>//localhost:1313/docs/containerization/containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerization/containerd/</guid>
      <description></description>
    </item>
    <item>
      <title>Docker</title>
      <link>//localhost:1313/docs/containerization/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerization/docker/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/build/building/base-images/#create-a-minimal-base-image-using-scratch&#34;&gt;https://docs.docker.com/build/building/base-images/#create-a-minimal-base-image-using-scratch&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;docker is a client-server architecture&lt;/p&gt;&#xA;&lt;p&gt;server - docker daemon (dockerd) manages docker objects - images-containers-networks- basically all API requests&#xA;client - docker and docker-compose&lt;/p&gt;&#xA;&lt;p&gt;Docker other objects - plugins,extensions&lt;/p&gt;&#xA;&lt;p&gt;Registry&lt;/p&gt;&#xA;&lt;p&gt;docker objects - images-containers-networks&lt;/p&gt;&#xA;&lt;p&gt;port mapping - host_port:container_port&lt;/p&gt;&#xA;&lt;p&gt;buildx - daemon process which runs build&lt;/p&gt;&#xA;&lt;h2 id=&#34;files-in-docker&#34;&gt;files in docker&lt;/h2&gt;&#xA;&lt;p&gt;Dockerfile&#xA;docker-compose.yml&#xA;.dockerignore&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Swarm</title>
      <link>//localhost:1313/docs/containerization/docker/dockerswarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerization/docker/dockerswarm/</guid>
      <description></description>
    </item>
    <item>
      <title>Docker Trusted Registry</title>
      <link>//localhost:1313/docs/containerization/docker/registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerization/docker/registry/</guid>
      <description></description>
    </item>
    <item>
      <title>Git</title>
      <link>//localhost:1313/docs/version-control/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/version-control/git/</guid>
      <description>&lt;p&gt;Git is designed by linus Tovalds for managing linux kernel development.&#xA;Platform independent, works with (linux,mac,windows)&lt;/p&gt;&#xA;&lt;h3 id=&#34;popular-git-based-platforms&#34;&gt;Popular Git-based platforms&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;github&lt;/li&gt;&#xA;&lt;li&gt;gittea&lt;/li&gt;&#xA;&lt;li&gt;gitlab&lt;/li&gt;&#xA;&lt;li&gt;bitbucket&lt;/li&gt;&#xA;&lt;li&gt;Azure devops (TFS)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rakesh-core-org/&#34;&gt;Reference github organization&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;why? &amp;ndash;opensource&amp;ndash;?&#xA;Local repository/remote repository&#xA;Options in git&lt;/p&gt;&#xA;&lt;h3 id=&#34;access-git&#34;&gt;Access git&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;git cli&lt;/li&gt;&#xA;&lt;li&gt;git platforms&lt;/li&gt;&#xA;&lt;li&gt;git GUI&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;install-git-client&#34;&gt;Install git client&lt;/h3&gt;&#xA;&lt;p&gt;Inorder to access git, we need to install git client in our local machine(where we are accessing git)&#xA;By default all major distributions ships with git, better update the package&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitconfig</title>
      <link>//localhost:1313/docs/version-control/git/gitconfig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/version-control/git/gitconfig/</guid>
      <description>&lt;p&gt;gitconfig can either configured globally or per repository&lt;/p&gt;&#xA;&lt;p&gt;to configure globally pass &lt;code&gt;--global&lt;/code&gt; flag&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git config --global user.name &amp;#34;Rakesh Nagarajan&amp;#34;&#xA;&#xA;git config --global user.email rakesh.core01@gmail.com&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can also edit in the file&lt;/p&gt;&#xA;&lt;p&gt;~/.gitconfig or  ~/.config/git/config&lt;/p&gt;&#xA;&lt;p&gt;In these files contains sections, edit the respective sections&lt;/p&gt;&#xA;&lt;p&gt;Reference&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration&#34;&gt;https://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://git-scm.com/docs/git-config&#34;&gt;https://git-scm.com/docs/git-config&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Hugo</title>
      <link>//localhost:1313/docs/documentation/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/documentation/hugo/</guid>
      <description>&lt;p&gt;For installing hugo&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases/tag/v0.138.0&#34;&gt;https://github.com/gohugoio/hugo/releases/tag/v0.138.0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;rakesh@rakesh-ws:/tmp$ wget &lt;a href=&#34;https://github.com/gohugoio/hugo/releases/download/v0.138.0/hugo_extended_0.138.0_linux-amd64.deb&#34;&gt;https://github.com/gohugoio/hugo/releases/download/v0.138.0/hugo_extended_0.138.0_linux-amd64.deb&lt;/a&gt;&#xA;rakesh@rakesh-ws:/tmp$ sudo dpkg -i hugo_extended_0.138.0_linux-amd64.deb&lt;/p&gt;&#xA;&lt;p&gt;rakesh@rakesh-ws:/tmp$ hugo version&#xA;hugo v0.138.0-ad82998d54b3f9f8c2741b67356813b55b3134b9+extended linux/amd64 BuildDate=2024-11-06T11:22:34Z VendorInfo=gohugoio&lt;/p&gt;&#xA;&lt;p&gt;rakesh@rakesh-ws:/data/knowledge-base$ hugo serve&lt;/p&gt;</description>
    </item>
    <item>
      <title>Podman</title>
      <link>//localhost:1313/docs/containerization/podman/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerization/podman/</guid>
      <description>&lt;div class=&#34;alert alert-success&#34; role=&#34;alert&#34;&gt;&#xA;&#xA;&#xA;    Documentation of podman is not good as of v5.2.3&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;Podman is supported majorly by redhat&#xA;better to create an account in quay.io for image registry&lt;/p&gt;&#xA;&lt;h1 id=&#34;open-container-initiative&#34;&gt;Open container Initiative&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://opencontainers.org/&#34;&gt;https://opencontainers.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Container runtimes - runc, crun, runv&lt;/p&gt;&#xA;&lt;p&gt;containers can run either as root or non-root&lt;/p&gt;&#xA;&lt;h1 id=&#34;container-image-registry---quayio&#34;&gt;container image registry - quay.io&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Poetry</title>
      <link>//localhost:1313/docs/development/python/poetry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/development/python/poetry/</guid>
      <description>&lt;p&gt;Python package manager and dependency management&lt;/p&gt;&#xA;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/CzsGvZkV-Qk?si=rtJGm72t50RULgV6&#34; title=&#34;YouTube video player&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; allowfullscreen&gt;&lt;/iframe&gt;&#xA;&#xA;&#xA;&lt;div class=&#34;pageinfo pageinfo-info&#34;&gt;&#xA;&lt;p&gt;You can &lt;a href=&#34;https://docs.google.com/presentation/d/e/2PACX-1vT2HLr61QAFPXGd1tuiDPAVxGLv9lVNzT5FolVGx8NxkXpnnAKc6dS13pzKyHVm9rst2RmV1Dnqc0xW/pub?start=false&amp;loop=false&amp;delayms=3000&#34;&gt;download slides here&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vT2HLr61QAFPXGd1tuiDPAVxGLv9lVNzT5FolVGx8NxkXpnnAKc6dS13pzKyHVm9rst2RmV1Dnqc0xW/embed?start=false&amp;loop=false&amp;delayms=3000&#34; frameborder=&#34;0&#34; width=&#34;560&#34; height=&#34;315&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;&#xA;&lt;p&gt;minimum python version 3.8+&#xA;poetry build ontop of pip&lt;/p&gt;&#xA;&lt;p&gt;Wraps&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;virtual environment (venv)&lt;/li&gt;&#xA;&lt;li&gt;pip&lt;/li&gt;&#xA;&lt;li&gt;wheel&lt;/li&gt;&#xA;&lt;li&gt;setuptools &amp;ndash;&amp;gt;setup.py&lt;/li&gt;&#xA;&lt;li&gt;twine&lt;/li&gt;&#xA;&lt;li&gt;versioning &amp;ndash;&amp;gt;init__.py&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;plus-points&#34;&gt;Plus points&lt;/h1&gt;&#xA;&lt;p&gt;metadata available in tool.poetry&#xA;dependency can be declared in groups&#xA;sources can be configured in one single place&#xA;packaging and build process&#xA;publish&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus</title>
      <link>//localhost:1313/docs/monitoring-tracing/prometheus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/monitoring-tracing/prometheus/</guid>
      <description>&lt;h1 id=&#34;thanos-for-high-scalable-system&#34;&gt;Thanos for high scalable system&lt;/h1&gt;</description>
    </item>
    <item>
      <title>Python</title>
      <link>//localhost:1313/docs/development/python/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/development/python/</guid>
      <description></description>
    </item>
    <item>
      <title>Sphinx</title>
      <link>//localhost:1313/docs/documentation/sphinx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/documentation/sphinx/</guid>
      <description>&lt;p&gt;Sphinx docs for python&lt;/p&gt;</description>
    </item>
    <item>
      <title>Version Control</title>
      <link>//localhost:1313/docs/version-control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/version-control/</guid>
      <description>&lt;p&gt;Version control is essential for managing code and projects. This is responsible for tracking changes and also to keep the code in remote repository.&lt;/p&gt;&#xA;&lt;h2 id=&#34;types-of-version-control&#34;&gt;Types of version control&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Local version control&lt;/li&gt;&#xA;&lt;li&gt;Centralized version control (subversion)&lt;/li&gt;&#xA;&lt;li&gt;Distributed version control (Git)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;basic-concepts-in-version-control&#34;&gt;Basic Concepts in Version Control&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;Repository&lt;/code&gt;: A project’s main directory containing all files and history.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Commit&lt;/code&gt;: A saved state of the repository at a specific point in time.&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;Branch&lt;/code&gt;: A separate line of development, allowing isolated changes without affecting the main codebase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Quality</title>
      <link>//localhost:1313/docs/code-quality/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/code-quality/</guid>
      <description></description>
    </item>
    <item>
      <title>Github</title>
      <link>//localhost:1313/docs/version-control/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/version-control/github/</guid>
      <description></description>
    </item>
    <item>
      <title>Grafana</title>
      <link>//localhost:1313/docs/monitoring-tracing/grafana/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/monitoring-tracing/grafana/</guid>
      <description></description>
    </item>
    <item>
      <title>LXC</title>
      <link>//localhost:1313/docs/containerization/lxc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerization/lxc/</guid>
      <description>&lt;p&gt;Linux containers are light weight containers, whereas docker is application container.&#xA;LXC were very useful  for local testing and development.&lt;/p&gt;&#xA;&lt;h2 id=&#34;about-lxd&#34;&gt;About lxd&lt;/h2&gt;&#xA;&lt;p&gt;LXD is the utility through which we install and manage LXC&lt;/p&gt;&#xA;&lt;h2 id=&#34;install-lxc-via-snap&#34;&gt;Install LXC via snap&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;snap install lxd&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;for-listing-all-available-images-in-repository&#34;&gt;For listing all available images in repository&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;lxc image list images:&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;launch-an-lxc&#34;&gt;Launch an LXC&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;lxc launch ubuntu:focal --vm foreman-001&lt;/code&gt;&#xA;&lt;code&gt;lxc launch ubuntu:noble --vm lxc-001&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;lxc launch images:ubuntu/24.04/desktop ubuntu &amp;ndash;vm -c limits.cpu=4 -c limits.memory=8GiB &amp;ndash;console=vga&lt;/p&gt;</description>
    </item>
    <item>
      <title>SonarQube</title>
      <link>//localhost:1313/docs/code-quality/sonarqube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/code-quality/sonarqube/</guid>
      <description></description>
    </item>
    <item>
      <title>Continous Integration</title>
      <link>//localhost:1313/docs/continous-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/continous-integration/</guid>
      <description></description>
    </item>
    <item>
      <title>Telemetry</title>
      <link>//localhost:1313/docs/monitoring-tracing/telemetry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/monitoring-tracing/telemetry/</guid>
      <description></description>
    </item>
    <item>
      <title>Containerization</title>
      <link>//localhost:1313/docs/containerization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/containerization/</guid>
      <description>&lt;p&gt;certain things which i didn&amp;rsquo;t focus before starting container.&lt;/p&gt;&#xA;&lt;h1 id=&#34;introduction-to-containerization&#34;&gt;Introduction to containerization&lt;/h1&gt;&#xA;&lt;p&gt;not a technology rather terminology &amp;ndash;&amp;gt; group of linux core concepts&lt;/p&gt;&#xA;&lt;h1 id=&#34;why-containerization&#34;&gt;Why containerization&lt;/h1&gt;&#xA;&lt;p&gt;why containers - what problem does it solves?&#xA;isolation (Process/network) &amp;ndash;&amp;gt; gives security&#xA;Resource limiting&#xA;Environment management(dependencies)&#xA;portability&lt;/p&gt;&#xA;&lt;h1 id=&#34;why-its-only-possible-to-run-linux-containers-in-linux---&#34;&gt;why its only possible to run linux containers in linux &amp;ndash;?&lt;/h1&gt;&#xA;&lt;p&gt;windows - also have kernel to run windows containers&lt;/p&gt;&#xA;&lt;h1 id=&#34;linux-kernel&#34;&gt;linux Kernel&lt;/h1&gt;&#xA;&lt;p&gt;GNU General Public License (GPL)&#xA;&lt;a href=&#34;https://www.redhat.com/en/topics/linux/what-is-the-linux-kernel&#34;&gt;https://www.redhat.com/en/topics/linux/what-is-the-linux-kernel&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible</title>
      <link>//localhost:1313/docs/configuration-management/ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/configuration-management/ansible/</guid>
      <description></description>
    </item>
    <item>
      <title>Ceph</title>
      <link>//localhost:1313/docs/storage/ceph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/storage/ceph/</guid>
      <description>&lt;h1 id=&#34;ceph-storage-cluster&#34;&gt;Ceph storage cluster&lt;/h1&gt;&#xA;&lt;p&gt;Once ceph storage cluster is deployed we can configure below&#xA;ceph is based on RADOS - Reliable Autonomic Distributed Object Store. which handles storage, distribution and replication of data accross cluster&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    uses CRUSH algorithm - how and where the data is stored&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;configurations&#34;&gt;configurations&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;OSD - &amp;gt; each OSD is backed by  a single storage device&lt;/li&gt;&#xA;&lt;li&gt;monitor -&amp;gt; cluster membership, authentication,&lt;/li&gt;&#xA;&lt;li&gt;manager -&amp;gt; provides interface to external monitoring and management system&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;OSD backend - Bluestore&#xA;Metadata management with RocksDB(key/value database)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration Management</title>
      <link>//localhost:1313/docs/configuration-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/configuration-management/</guid>
      <description></description>
    </item>
    <item>
      <title>Storage</title>
      <link>//localhost:1313/docs/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/storage/</guid>
      <description></description>
    </item>
    <item>
      <title>Databases</title>
      <link>//localhost:1313/docs/database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/database/</guid>
      <description></description>
    </item>
    <item>
      <title>Binary Artifacts</title>
      <link>//localhost:1313/docs/binary-artifacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/binary-artifacts/</guid>
      <description>&lt;p&gt;All build packages is called as binary artifacts&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitOps</title>
      <link>//localhost:1313/docs/gitops/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/gitops/</guid>
      <description></description>
    </item>
    <item>
      <title>Vault</title>
      <link>//localhost:1313/docs/secret-management/vault/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/secret-management/vault/</guid>
      <description>&lt;p&gt;Why we need a vault? what problem does it solve&#xA;similar solutions&#xA;keypass&#xA;paid&#xA;installation method&lt;/p&gt;&#xA;&lt;p&gt;vault dedicated &amp;ndash;&amp;gt; hosted service by HCP&#xA;install vault CLI client and server or just client&lt;br&gt;&#xA;Access via UI, HTTP API, CLI&lt;/p&gt;&#xA;&lt;p&gt;vault - various pluggable components&lt;/p&gt;&#xA;&lt;p&gt;backup method&lt;/p&gt;&#xA;&lt;p&gt;HA method&lt;/p&gt;&#xA;&lt;p&gt;ngrok &amp;ndash;connect to database testing&lt;/p&gt;&#xA;&lt;p&gt;workload become ephermeral and short lived &amp;ndash; long-lived static creds makes security threat&lt;/p&gt;&#xA;&lt;p&gt;tokens, API keys, passwords, certificates&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monitoring and Tracing</title>
      <link>//localhost:1313/docs/monitoring-tracing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/monitoring-tracing/</guid>
      <description></description>
    </item>
    <item>
      <title>Documentation</title>
      <link>//localhost:1313/docs/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/documentation/</guid>
      <description></description>
    </item>
    <item>
      <title>Development</title>
      <link>//localhost:1313/docs/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/development/</guid>
      <description></description>
    </item>
    <item>
      <title>MongoDB</title>
      <link>//localhost:1313/docs/database/mongodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/database/mongodb/</guid>
      <description></description>
    </item>
    <item>
      <title>Operating system</title>
      <link>//localhost:1313/docs/operating-systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/operating-systems/</guid>
      <description></description>
    </item>
    <item>
      <title>Authentication</title>
      <link>//localhost:1313/docs/authentication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/authentication/</guid>
      <description></description>
    </item>
    <item>
      <title>Secret Management</title>
      <link>//localhost:1313/docs/secret-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/secret-management/</guid>
      <description></description>
    </item>
    <item>
      <title>Argocd</title>
      <link>//localhost:1313/docs/gitops/argocd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/gitops/argocd/</guid>
      <description>&lt;h1 id=&#34;enables-auto-deployment&#34;&gt;enables auto deployment&lt;/h1&gt;</description>
    </item>
    <item>
      <title>dapr</title>
      <link>//localhost:1313/docs/dapr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/dapr/</guid>
      <description></description>
    </item>
    <item>
      <title>Jenkins</title>
      <link>//localhost:1313/docs/continous-integration/jenkins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/docs/continous-integration/jenkins/</guid>
      <description></description>
    </item>
  </channel>
</rss>
